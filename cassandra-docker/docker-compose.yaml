version: '3.8'

services:
  cass1:
    image: cassandra:4.1.0  # better to use a specific version, if you want to control upgrades
    container_name: cass1
    hostname: cass1
    healthcheck:
      test: [ "CMD", "cqlsh", "-e", "describe keyspaces" ]
      interval: 5s
      timeout: 5s
      retries: 60
    networks:
      cassandranet:
        ipv4_address: 10.5.0.10
    ports:
      - "9042:9042"  # Expose native binary CQL port for your apps
    #    volumes:
    #      - ./data/cass1:/var/lib/cassandra    # This is the volume that will persist data for cass1 node
    #      - ./etc/cass1:/etc/cassandra   # Use your own config files for full control
    environment: &environment    # Declare and save environments variables into "environment"
      CASSANDRA_SEEDS: cass1
      CASSANDRA_CLUSTER_NAME: nbd-cluster
      CASSANDRA_DC: dc1
      CASSANDRA_ENDPOINT_SNITCH: GossipingPropertyFileSnitch
      MAX_HEAP_SIZE: 2G
      HEAP_NEWSIZE: 1G

  cass2:
    image: cassandra:4.1.0
    container_name: cass2
    hostname: cass2
    healthcheck:
      test: [ "CMD", "cqlsh", "-e", "describe keyspaces" ]
      interval: 5s
      timeout: 5s
      retries: 60
    networks:
      cassandranet:
        ipv4_address: 10.5.0.20
    ports:
      - "9043:9042"
    #    volumes:
    #      - ./data/cass2:/var/lib/cassandra
    #      - ./etc/cass2:/etc/cassandra
    environment: *environment    # point to "environment" to use the same environment variables as cass1
    depends_on:
      cass1: # start cass2 only after cass1 is healthy
        condition: service_healthy
#
#  cass3:
#    image: cassandra:4.1.0
#    container_name: cass3
#    hostname: cass3
#    healthcheck:
#      test: [ "CMD", "cqlsh", "-e", "describe keyspaces" ]
#      interval: 5s
#      timeout: 5s
#      retries: 60
#    networks:
#      cassandranet:
#        ipv4_address: 10.5.0.30
#    ports:
#      - "9044:9042"
#    #    volumes:
#    #      - ./data/cass3:/var/lib/cassandra
#    #      - ./etc/cass3:/etc/cassandra
#    environment: *environment    # point to "environment" to use the same environment variables as cass1
#    depends_on:
#      cass2: # start cass3 only after cass1 is healthy
#        condition: service_healthy
networks:
  cassandranet:
    driver: bridge
    ipam:
      config:
        - subnet: 10.5.0.0/24
          gateway: 10.5.0.1

